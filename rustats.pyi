import numpy as np
from numpy.typing import NDArray

def move_sum_test(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_mean_test(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_sum(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_std(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_var(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_mean(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_max(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_min(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_median(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_skewness(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_skewness_parallel(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_kurtosis(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
def move_kurtosis_parallel(
    array: NDArray[np.float32], length: int, min_length: int
) -> NDArray[np.float32]: ...
